// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: quintet.proto

#ifndef PROTOBUF_INCLUDED_quintet_2eproto
#define PROTOBUF_INCLUDED_quintet_2eproto

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3006000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#define PROTOBUF_INTERNAL_EXPORT_protobuf_quintet_2eproto 

namespace protobuf_quintet_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[2];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
}  // namespace protobuf_quintet_2eproto
namespace quintet {
namespace rpc {
class PbExternalMessage;
class PbExternalMessageDefaultTypeInternal;
extern PbExternalMessageDefaultTypeInternal _PbExternalMessage_default_instance_;
class PbExternalReply;
class PbExternalReplyDefaultTypeInternal;
extern PbExternalReplyDefaultTypeInternal _PbExternalReply_default_instance_;
}  // namespace rpc
}  // namespace quintet
namespace google {
namespace protobuf {
template<> ::quintet::rpc::PbExternalMessage* Arena::CreateMaybeMessage<::quintet::rpc::PbExternalMessage>(Arena*);
template<> ::quintet::rpc::PbExternalReply* Arena::CreateMaybeMessage<::quintet::rpc::PbExternalReply>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace quintet {
namespace rpc {

// ===================================================================

class PbExternalMessage : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:quintet.rpc.PbExternalMessage) */ {
 public:
  PbExternalMessage();
  virtual ~PbExternalMessage();

  PbExternalMessage(const PbExternalMessage& from);

  inline PbExternalMessage& operator=(const PbExternalMessage& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PbExternalMessage(PbExternalMessage&& from) noexcept
    : PbExternalMessage() {
    *this = ::std::move(from);
  }

  inline PbExternalMessage& operator=(PbExternalMessage&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const PbExternalMessage& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const PbExternalMessage* internal_default_instance() {
    return reinterpret_cast<const PbExternalMessage*>(
               &_PbExternalMessage_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(PbExternalMessage* other);
  friend void swap(PbExternalMessage& a, PbExternalMessage& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PbExternalMessage* New() const final {
    return CreateMaybeMessage<PbExternalMessage>(NULL);
  }

  PbExternalMessage* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<PbExternalMessage>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const PbExternalMessage& from);
  void MergeFrom(const PbExternalMessage& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PbExternalMessage* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string opName = 1;
  void clear_opname();
  static const int kOpNameFieldNumber = 1;
  const ::std::string& opname() const;
  void set_opname(const ::std::string& value);
  #if LANG_CXX11
  void set_opname(::std::string&& value);
  #endif
  void set_opname(const char* value);
  void set_opname(const char* value, size_t size);
  ::std::string* mutable_opname();
  ::std::string* release_opname();
  void set_allocated_opname(::std::string* opname);

  // string args = 2;
  void clear_args();
  static const int kArgsFieldNumber = 2;
  const ::std::string& args() const;
  void set_args(const ::std::string& value);
  #if LANG_CXX11
  void set_args(::std::string&& value);
  #endif
  void set_args(const char* value);
  void set_args(const char* value, size_t size);
  ::std::string* mutable_args();
  ::std::string* release_args();
  void set_allocated_args(::std::string* args);

  // @@protoc_insertion_point(class_scope:quintet.rpc.PbExternalMessage)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr opname_;
  ::google::protobuf::internal::ArenaStringPtr args_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_quintet_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class PbExternalReply : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:quintet.rpc.PbExternalReply) */ {
 public:
  PbExternalReply();
  virtual ~PbExternalReply();

  PbExternalReply(const PbExternalReply& from);

  inline PbExternalReply& operator=(const PbExternalReply& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PbExternalReply(PbExternalReply&& from) noexcept
    : PbExternalReply() {
    *this = ::std::move(from);
  }

  inline PbExternalReply& operator=(PbExternalReply&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const PbExternalReply& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const PbExternalReply* internal_default_instance() {
    return reinterpret_cast<const PbExternalReply*>(
               &_PbExternalReply_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  void Swap(PbExternalReply* other);
  friend void swap(PbExternalReply& a, PbExternalReply& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PbExternalReply* New() const final {
    return CreateMaybeMessage<PbExternalReply>(NULL);
  }

  PbExternalReply* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<PbExternalReply>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const PbExternalReply& from);
  void MergeFrom(const PbExternalReply& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PbExternalReply* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string LeaderId = 1;
  void clear_leaderid();
  static const int kLeaderIdFieldNumber = 1;
  const ::std::string& leaderid() const;
  void set_leaderid(const ::std::string& value);
  #if LANG_CXX11
  void set_leaderid(::std::string&& value);
  #endif
  void set_leaderid(const char* value);
  void set_leaderid(const char* value, size_t size);
  ::std::string* mutable_leaderid();
  ::std::string* release_leaderid();
  void set_allocated_leaderid(::std::string* leaderid);

  // string ret = 2;
  void clear_ret();
  static const int kRetFieldNumber = 2;
  const ::std::string& ret() const;
  void set_ret(const ::std::string& value);
  #if LANG_CXX11
  void set_ret(::std::string&& value);
  #endif
  void set_ret(const char* value);
  void set_ret(const char* value, size_t size);
  ::std::string* mutable_ret();
  ::std::string* release_ret();
  void set_allocated_ret(::std::string* ret);

  // @@protoc_insertion_point(class_scope:quintet.rpc.PbExternalReply)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr leaderid_;
  ::google::protobuf::internal::ArenaStringPtr ret_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_quintet_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// PbExternalMessage

// string opName = 1;
inline void PbExternalMessage::clear_opname() {
  opname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& PbExternalMessage::opname() const {
  // @@protoc_insertion_point(field_get:quintet.rpc.PbExternalMessage.opName)
  return opname_.GetNoArena();
}
inline void PbExternalMessage::set_opname(const ::std::string& value) {
  
  opname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:quintet.rpc.PbExternalMessage.opName)
}
#if LANG_CXX11
inline void PbExternalMessage::set_opname(::std::string&& value) {
  
  opname_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:quintet.rpc.PbExternalMessage.opName)
}
#endif
inline void PbExternalMessage::set_opname(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  opname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:quintet.rpc.PbExternalMessage.opName)
}
inline void PbExternalMessage::set_opname(const char* value, size_t size) {
  
  opname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:quintet.rpc.PbExternalMessage.opName)
}
inline ::std::string* PbExternalMessage::mutable_opname() {
  
  // @@protoc_insertion_point(field_mutable:quintet.rpc.PbExternalMessage.opName)
  return opname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PbExternalMessage::release_opname() {
  // @@protoc_insertion_point(field_release:quintet.rpc.PbExternalMessage.opName)
  
  return opname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PbExternalMessage::set_allocated_opname(::std::string* opname) {
  if (opname != NULL) {
    
  } else {
    
  }
  opname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), opname);
  // @@protoc_insertion_point(field_set_allocated:quintet.rpc.PbExternalMessage.opName)
}

// string args = 2;
inline void PbExternalMessage::clear_args() {
  args_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& PbExternalMessage::args() const {
  // @@protoc_insertion_point(field_get:quintet.rpc.PbExternalMessage.args)
  return args_.GetNoArena();
}
inline void PbExternalMessage::set_args(const ::std::string& value) {
  
  args_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:quintet.rpc.PbExternalMessage.args)
}
#if LANG_CXX11
inline void PbExternalMessage::set_args(::std::string&& value) {
  
  args_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:quintet.rpc.PbExternalMessage.args)
}
#endif
inline void PbExternalMessage::set_args(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  args_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:quintet.rpc.PbExternalMessage.args)
}
inline void PbExternalMessage::set_args(const char* value, size_t size) {
  
  args_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:quintet.rpc.PbExternalMessage.args)
}
inline ::std::string* PbExternalMessage::mutable_args() {
  
  // @@protoc_insertion_point(field_mutable:quintet.rpc.PbExternalMessage.args)
  return args_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PbExternalMessage::release_args() {
  // @@protoc_insertion_point(field_release:quintet.rpc.PbExternalMessage.args)
  
  return args_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PbExternalMessage::set_allocated_args(::std::string* args) {
  if (args != NULL) {
    
  } else {
    
  }
  args_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), args);
  // @@protoc_insertion_point(field_set_allocated:quintet.rpc.PbExternalMessage.args)
}

// -------------------------------------------------------------------

// PbExternalReply

// string LeaderId = 1;
inline void PbExternalReply::clear_leaderid() {
  leaderid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& PbExternalReply::leaderid() const {
  // @@protoc_insertion_point(field_get:quintet.rpc.PbExternalReply.LeaderId)
  return leaderid_.GetNoArena();
}
inline void PbExternalReply::set_leaderid(const ::std::string& value) {
  
  leaderid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:quintet.rpc.PbExternalReply.LeaderId)
}
#if LANG_CXX11
inline void PbExternalReply::set_leaderid(::std::string&& value) {
  
  leaderid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:quintet.rpc.PbExternalReply.LeaderId)
}
#endif
inline void PbExternalReply::set_leaderid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  leaderid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:quintet.rpc.PbExternalReply.LeaderId)
}
inline void PbExternalReply::set_leaderid(const char* value, size_t size) {
  
  leaderid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:quintet.rpc.PbExternalReply.LeaderId)
}
inline ::std::string* PbExternalReply::mutable_leaderid() {
  
  // @@protoc_insertion_point(field_mutable:quintet.rpc.PbExternalReply.LeaderId)
  return leaderid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PbExternalReply::release_leaderid() {
  // @@protoc_insertion_point(field_release:quintet.rpc.PbExternalReply.LeaderId)
  
  return leaderid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PbExternalReply::set_allocated_leaderid(::std::string* leaderid) {
  if (leaderid != NULL) {
    
  } else {
    
  }
  leaderid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), leaderid);
  // @@protoc_insertion_point(field_set_allocated:quintet.rpc.PbExternalReply.LeaderId)
}

// string ret = 2;
inline void PbExternalReply::clear_ret() {
  ret_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& PbExternalReply::ret() const {
  // @@protoc_insertion_point(field_get:quintet.rpc.PbExternalReply.ret)
  return ret_.GetNoArena();
}
inline void PbExternalReply::set_ret(const ::std::string& value) {
  
  ret_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:quintet.rpc.PbExternalReply.ret)
}
#if LANG_CXX11
inline void PbExternalReply::set_ret(::std::string&& value) {
  
  ret_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:quintet.rpc.PbExternalReply.ret)
}
#endif
inline void PbExternalReply::set_ret(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  ret_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:quintet.rpc.PbExternalReply.ret)
}
inline void PbExternalReply::set_ret(const char* value, size_t size) {
  
  ret_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:quintet.rpc.PbExternalReply.ret)
}
inline ::std::string* PbExternalReply::mutable_ret() {
  
  // @@protoc_insertion_point(field_mutable:quintet.rpc.PbExternalReply.ret)
  return ret_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PbExternalReply::release_ret() {
  // @@protoc_insertion_point(field_release:quintet.rpc.PbExternalReply.ret)
  
  return ret_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PbExternalReply::set_allocated_ret(::std::string* ret) {
  if (ret != NULL) {
    
  } else {
    
  }
  ret_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ret);
  // @@protoc_insertion_point(field_set_allocated:quintet.rpc.PbExternalReply.ret)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace rpc
}  // namespace quintet

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_INCLUDED_quintet_2eproto
