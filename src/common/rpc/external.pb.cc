// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: external.proto

#include "external.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace quintet {
namespace rpc {
class EmptyDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Empty>
      _instance;
} _Empty_default_instance_;
class RegisterClientReplyDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<RegisterClientReply>
      _instance;
} _RegisterClientReply_default_instance_;
class ClientRequestMessageDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ClientRequestMessage>
      _instance;
} _ClientRequestMessage_default_instance_;
class ClientRequestReplyDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ClientRequestReply>
      _instance;
} _ClientRequestReply_default_instance_;
}  // namespace rpc
}  // namespace quintet
namespace protobuf_external_2eproto {
static void InitDefaultsEmpty() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::quintet::rpc::_Empty_default_instance_;
    new (ptr) ::quintet::rpc::Empty();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::quintet::rpc::Empty::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Empty =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsEmpty}, {}};

static void InitDefaultsRegisterClientReply() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::quintet::rpc::_RegisterClientReply_default_instance_;
    new (ptr) ::quintet::rpc::RegisterClientReply();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::quintet::rpc::RegisterClientReply::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_RegisterClientReply =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsRegisterClientReply}, {}};

static void InitDefaultsClientRequestMessage() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::quintet::rpc::_ClientRequestMessage_default_instance_;
    new (ptr) ::quintet::rpc::ClientRequestMessage();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::quintet::rpc::ClientRequestMessage::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ClientRequestMessage =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsClientRequestMessage}, {}};

static void InitDefaultsClientRequestReply() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::quintet::rpc::_ClientRequestReply_default_instance_;
    new (ptr) ::quintet::rpc::ClientRequestReply();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::quintet::rpc::ClientRequestReply::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ClientRequestReply =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsClientRequestReply}, {}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_Empty.base);
  ::google::protobuf::internal::InitSCC(&scc_info_RegisterClientReply.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ClientRequestMessage.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ClientRequestReply.base);
}

::google::protobuf::Metadata file_level_metadata[4];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[1];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::quintet::rpc::Empty, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::quintet::rpc::RegisterClientReply, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::quintet::rpc::RegisterClientReply, status_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::quintet::rpc::RegisterClientReply, clientid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::quintet::rpc::RegisterClientReply, leaderhint_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::quintet::rpc::ClientRequestMessage, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::quintet::rpc::ClientRequestMessage, clientid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::quintet::rpc::ClientRequestMessage, sequencenum_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::quintet::rpc::ClientRequestMessage, opname_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::quintet::rpc::ClientRequestMessage, args_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::quintet::rpc::ClientRequestReply, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::quintet::rpc::ClientRequestReply, status_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::quintet::rpc::ClientRequestReply, leaderhint_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::quintet::rpc::ClientRequestReply, response_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::quintet::rpc::Empty)},
  { 5, -1, sizeof(::quintet::rpc::RegisterClientReply)},
  { 13, -1, sizeof(::quintet::rpc::ClientRequestMessage)},
  { 22, -1, sizeof(::quintet::rpc::ClientRequestReply)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::quintet::rpc::_Empty_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::quintet::rpc::_RegisterClientReply_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::quintet::rpc::_ClientRequestMessage_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::quintet::rpc::_ClientRequestReply_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "external.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 4);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\016external.proto\022\013quintet.rpc\"\007\n\005Empty\"`"
      "\n\023RegisterClientReply\022#\n\006status\030\001 \001(\0162\023."
      "quintet.rpc.Status\022\020\n\010clientId\030\002 \001(\t\022\022\n\n"
      "leaderHint\030\003 \001(\t\"[\n\024ClientRequestMessage"
      "\022\020\n\010clientId\030\001 \001(\t\022\023\n\013sequenceNum\030\002 \001(\004\022"
      "\016\n\006opName\030\003 \001(\t\022\014\n\004args\030\004 \001(\t\"_\n\022ClientR"
      "equestReply\022#\n\006status\030\001 \001(\0162\023.quintet.rp"
      "c.Status\022\022\n\nleaderHint\030\002 \001(\t\022\020\n\010response"
      "\030\003 \001(\t* \n\006Status\022\006\n\002OK\020\000\022\016\n\nNOT_LEADER\020\001"
      "2\253\001\n\010External\022H\n\016RegisterClient\022\022.quinte"
      "t.rpc.Empty\032 .quintet.rpc.RegisterClient"
      "Reply\"\000\022U\n\rClientRequest\022!.quintet.rpc.C"
      "lientRequestMessage\032\037.quintet.rpc.Client"
      "RequestReply\"\000b\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 542);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "external.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_external_2eproto
namespace quintet {
namespace rpc {
const ::google::protobuf::EnumDescriptor* Status_descriptor() {
  protobuf_external_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_external_2eproto::file_level_enum_descriptors[0];
}
bool Status_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}


// ===================================================================

void Empty::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Empty::Empty()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_external_2eproto::scc_info_Empty.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:quintet.rpc.Empty)
}
Empty::Empty(const Empty& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:quintet.rpc.Empty)
}

void Empty::SharedCtor() {
}

Empty::~Empty() {
  // @@protoc_insertion_point(destructor:quintet.rpc.Empty)
  SharedDtor();
}

void Empty::SharedDtor() {
}

void Empty::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Empty::descriptor() {
  ::protobuf_external_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_external_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Empty& Empty::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_external_2eproto::scc_info_Empty.base);
  return *internal_default_instance();
}


void Empty::Clear() {
// @@protoc_insertion_point(message_clear_start:quintet.rpc.Empty)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

bool Empty::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:quintet.rpc.Empty)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:quintet.rpc.Empty)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:quintet.rpc.Empty)
  return false;
#undef DO_
}

void Empty::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:quintet.rpc.Empty)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:quintet.rpc.Empty)
}

::google::protobuf::uint8* Empty::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:quintet.rpc.Empty)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:quintet.rpc.Empty)
  return target;
}

size_t Empty::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:quintet.rpc.Empty)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Empty::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:quintet.rpc.Empty)
  GOOGLE_DCHECK_NE(&from, this);
  const Empty* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Empty>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:quintet.rpc.Empty)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:quintet.rpc.Empty)
    MergeFrom(*source);
  }
}

void Empty::MergeFrom(const Empty& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:quintet.rpc.Empty)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void Empty::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:quintet.rpc.Empty)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Empty::CopyFrom(const Empty& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:quintet.rpc.Empty)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Empty::IsInitialized() const {
  return true;
}

void Empty::Swap(Empty* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Empty::InternalSwap(Empty* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Empty::GetMetadata() const {
  protobuf_external_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_external_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void RegisterClientReply::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RegisterClientReply::kStatusFieldNumber;
const int RegisterClientReply::kClientIdFieldNumber;
const int RegisterClientReply::kLeaderHintFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RegisterClientReply::RegisterClientReply()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_external_2eproto::scc_info_RegisterClientReply.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:quintet.rpc.RegisterClientReply)
}
RegisterClientReply::RegisterClientReply(const RegisterClientReply& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  clientid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.clientid().size() > 0) {
    clientid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.clientid_);
  }
  leaderhint_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.leaderhint().size() > 0) {
    leaderhint_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.leaderhint_);
  }
  status_ = from.status_;
  // @@protoc_insertion_point(copy_constructor:quintet.rpc.RegisterClientReply)
}

void RegisterClientReply::SharedCtor() {
  clientid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  leaderhint_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  status_ = 0;
}

RegisterClientReply::~RegisterClientReply() {
  // @@protoc_insertion_point(destructor:quintet.rpc.RegisterClientReply)
  SharedDtor();
}

void RegisterClientReply::SharedDtor() {
  clientid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  leaderhint_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void RegisterClientReply::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* RegisterClientReply::descriptor() {
  ::protobuf_external_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_external_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RegisterClientReply& RegisterClientReply::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_external_2eproto::scc_info_RegisterClientReply.base);
  return *internal_default_instance();
}


void RegisterClientReply::Clear() {
// @@protoc_insertion_point(message_clear_start:quintet.rpc.RegisterClientReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clientid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  leaderhint_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  status_ = 0;
  _internal_metadata_.Clear();
}

bool RegisterClientReply::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:quintet.rpc.RegisterClientReply)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .quintet.rpc.Status status = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_status(static_cast< ::quintet::rpc::Status >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string clientId = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_clientid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->clientid().data(), static_cast<int>(this->clientid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "quintet.rpc.RegisterClientReply.clientId"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string leaderHint = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_leaderhint()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->leaderhint().data(), static_cast<int>(this->leaderhint().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "quintet.rpc.RegisterClientReply.leaderHint"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:quintet.rpc.RegisterClientReply)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:quintet.rpc.RegisterClientReply)
  return false;
#undef DO_
}

void RegisterClientReply::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:quintet.rpc.RegisterClientReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .quintet.rpc.Status status = 1;
  if (this->status() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->status(), output);
  }

  // string clientId = 2;
  if (this->clientid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->clientid().data(), static_cast<int>(this->clientid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "quintet.rpc.RegisterClientReply.clientId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->clientid(), output);
  }

  // string leaderHint = 3;
  if (this->leaderhint().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->leaderhint().data(), static_cast<int>(this->leaderhint().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "quintet.rpc.RegisterClientReply.leaderHint");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->leaderhint(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:quintet.rpc.RegisterClientReply)
}

::google::protobuf::uint8* RegisterClientReply::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:quintet.rpc.RegisterClientReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .quintet.rpc.Status status = 1;
  if (this->status() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->status(), target);
  }

  // string clientId = 2;
  if (this->clientid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->clientid().data(), static_cast<int>(this->clientid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "quintet.rpc.RegisterClientReply.clientId");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->clientid(), target);
  }

  // string leaderHint = 3;
  if (this->leaderhint().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->leaderhint().data(), static_cast<int>(this->leaderhint().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "quintet.rpc.RegisterClientReply.leaderHint");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->leaderhint(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:quintet.rpc.RegisterClientReply)
  return target;
}

size_t RegisterClientReply::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:quintet.rpc.RegisterClientReply)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string clientId = 2;
  if (this->clientid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->clientid());
  }

  // string leaderHint = 3;
  if (this->leaderhint().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->leaderhint());
  }

  // .quintet.rpc.Status status = 1;
  if (this->status() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->status());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RegisterClientReply::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:quintet.rpc.RegisterClientReply)
  GOOGLE_DCHECK_NE(&from, this);
  const RegisterClientReply* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RegisterClientReply>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:quintet.rpc.RegisterClientReply)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:quintet.rpc.RegisterClientReply)
    MergeFrom(*source);
  }
}

void RegisterClientReply::MergeFrom(const RegisterClientReply& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:quintet.rpc.RegisterClientReply)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.clientid().size() > 0) {

    clientid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.clientid_);
  }
  if (from.leaderhint().size() > 0) {

    leaderhint_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.leaderhint_);
  }
  if (from.status() != 0) {
    set_status(from.status());
  }
}

void RegisterClientReply::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:quintet.rpc.RegisterClientReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RegisterClientReply::CopyFrom(const RegisterClientReply& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:quintet.rpc.RegisterClientReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RegisterClientReply::IsInitialized() const {
  return true;
}

void RegisterClientReply::Swap(RegisterClientReply* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RegisterClientReply::InternalSwap(RegisterClientReply* other) {
  using std::swap;
  clientid_.Swap(&other->clientid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  leaderhint_.Swap(&other->leaderhint_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(status_, other->status_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata RegisterClientReply::GetMetadata() const {
  protobuf_external_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_external_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ClientRequestMessage::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ClientRequestMessage::kClientIdFieldNumber;
const int ClientRequestMessage::kSequenceNumFieldNumber;
const int ClientRequestMessage::kOpNameFieldNumber;
const int ClientRequestMessage::kArgsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ClientRequestMessage::ClientRequestMessage()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_external_2eproto::scc_info_ClientRequestMessage.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:quintet.rpc.ClientRequestMessage)
}
ClientRequestMessage::ClientRequestMessage(const ClientRequestMessage& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  clientid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.clientid().size() > 0) {
    clientid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.clientid_);
  }
  opname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.opname().size() > 0) {
    opname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.opname_);
  }
  args_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.args().size() > 0) {
    args_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.args_);
  }
  sequencenum_ = from.sequencenum_;
  // @@protoc_insertion_point(copy_constructor:quintet.rpc.ClientRequestMessage)
}

void ClientRequestMessage::SharedCtor() {
  clientid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  opname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  args_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sequencenum_ = GOOGLE_ULONGLONG(0);
}

ClientRequestMessage::~ClientRequestMessage() {
  // @@protoc_insertion_point(destructor:quintet.rpc.ClientRequestMessage)
  SharedDtor();
}

void ClientRequestMessage::SharedDtor() {
  clientid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  opname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  args_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ClientRequestMessage::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ClientRequestMessage::descriptor() {
  ::protobuf_external_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_external_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ClientRequestMessage& ClientRequestMessage::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_external_2eproto::scc_info_ClientRequestMessage.base);
  return *internal_default_instance();
}


void ClientRequestMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:quintet.rpc.ClientRequestMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clientid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  opname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  args_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sequencenum_ = GOOGLE_ULONGLONG(0);
  _internal_metadata_.Clear();
}

bool ClientRequestMessage::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:quintet.rpc.ClientRequestMessage)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string clientId = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_clientid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->clientid().data(), static_cast<int>(this->clientid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "quintet.rpc.ClientRequestMessage.clientId"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 sequenceNum = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &sequencenum_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string opName = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_opname()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->opname().data(), static_cast<int>(this->opname().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "quintet.rpc.ClientRequestMessage.opName"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string args = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_args()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->args().data(), static_cast<int>(this->args().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "quintet.rpc.ClientRequestMessage.args"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:quintet.rpc.ClientRequestMessage)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:quintet.rpc.ClientRequestMessage)
  return false;
#undef DO_
}

void ClientRequestMessage::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:quintet.rpc.ClientRequestMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string clientId = 1;
  if (this->clientid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->clientid().data(), static_cast<int>(this->clientid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "quintet.rpc.ClientRequestMessage.clientId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->clientid(), output);
  }

  // uint64 sequenceNum = 2;
  if (this->sequencenum() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->sequencenum(), output);
  }

  // string opName = 3;
  if (this->opname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->opname().data(), static_cast<int>(this->opname().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "quintet.rpc.ClientRequestMessage.opName");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->opname(), output);
  }

  // string args = 4;
  if (this->args().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->args().data(), static_cast<int>(this->args().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "quintet.rpc.ClientRequestMessage.args");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->args(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:quintet.rpc.ClientRequestMessage)
}

::google::protobuf::uint8* ClientRequestMessage::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:quintet.rpc.ClientRequestMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string clientId = 1;
  if (this->clientid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->clientid().data(), static_cast<int>(this->clientid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "quintet.rpc.ClientRequestMessage.clientId");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->clientid(), target);
  }

  // uint64 sequenceNum = 2;
  if (this->sequencenum() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->sequencenum(), target);
  }

  // string opName = 3;
  if (this->opname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->opname().data(), static_cast<int>(this->opname().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "quintet.rpc.ClientRequestMessage.opName");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->opname(), target);
  }

  // string args = 4;
  if (this->args().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->args().data(), static_cast<int>(this->args().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "quintet.rpc.ClientRequestMessage.args");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->args(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:quintet.rpc.ClientRequestMessage)
  return target;
}

size_t ClientRequestMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:quintet.rpc.ClientRequestMessage)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string clientId = 1;
  if (this->clientid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->clientid());
  }

  // string opName = 3;
  if (this->opname().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->opname());
  }

  // string args = 4;
  if (this->args().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->args());
  }

  // uint64 sequenceNum = 2;
  if (this->sequencenum() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->sequencenum());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ClientRequestMessage::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:quintet.rpc.ClientRequestMessage)
  GOOGLE_DCHECK_NE(&from, this);
  const ClientRequestMessage* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ClientRequestMessage>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:quintet.rpc.ClientRequestMessage)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:quintet.rpc.ClientRequestMessage)
    MergeFrom(*source);
  }
}

void ClientRequestMessage::MergeFrom(const ClientRequestMessage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:quintet.rpc.ClientRequestMessage)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.clientid().size() > 0) {

    clientid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.clientid_);
  }
  if (from.opname().size() > 0) {

    opname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.opname_);
  }
  if (from.args().size() > 0) {

    args_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.args_);
  }
  if (from.sequencenum() != 0) {
    set_sequencenum(from.sequencenum());
  }
}

void ClientRequestMessage::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:quintet.rpc.ClientRequestMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ClientRequestMessage::CopyFrom(const ClientRequestMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:quintet.rpc.ClientRequestMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ClientRequestMessage::IsInitialized() const {
  return true;
}

void ClientRequestMessage::Swap(ClientRequestMessage* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ClientRequestMessage::InternalSwap(ClientRequestMessage* other) {
  using std::swap;
  clientid_.Swap(&other->clientid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  opname_.Swap(&other->opname_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  args_.Swap(&other->args_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(sequencenum_, other->sequencenum_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ClientRequestMessage::GetMetadata() const {
  protobuf_external_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_external_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ClientRequestReply::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ClientRequestReply::kStatusFieldNumber;
const int ClientRequestReply::kLeaderHintFieldNumber;
const int ClientRequestReply::kResponseFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ClientRequestReply::ClientRequestReply()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_external_2eproto::scc_info_ClientRequestReply.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:quintet.rpc.ClientRequestReply)
}
ClientRequestReply::ClientRequestReply(const ClientRequestReply& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  leaderhint_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.leaderhint().size() > 0) {
    leaderhint_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.leaderhint_);
  }
  response_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.response().size() > 0) {
    response_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.response_);
  }
  status_ = from.status_;
  // @@protoc_insertion_point(copy_constructor:quintet.rpc.ClientRequestReply)
}

void ClientRequestReply::SharedCtor() {
  leaderhint_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  response_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  status_ = 0;
}

ClientRequestReply::~ClientRequestReply() {
  // @@protoc_insertion_point(destructor:quintet.rpc.ClientRequestReply)
  SharedDtor();
}

void ClientRequestReply::SharedDtor() {
  leaderhint_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  response_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ClientRequestReply::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ClientRequestReply::descriptor() {
  ::protobuf_external_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_external_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ClientRequestReply& ClientRequestReply::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_external_2eproto::scc_info_ClientRequestReply.base);
  return *internal_default_instance();
}


void ClientRequestReply::Clear() {
// @@protoc_insertion_point(message_clear_start:quintet.rpc.ClientRequestReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  leaderhint_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  response_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  status_ = 0;
  _internal_metadata_.Clear();
}

bool ClientRequestReply::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:quintet.rpc.ClientRequestReply)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .quintet.rpc.Status status = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_status(static_cast< ::quintet::rpc::Status >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string leaderHint = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_leaderhint()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->leaderhint().data(), static_cast<int>(this->leaderhint().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "quintet.rpc.ClientRequestReply.leaderHint"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string response = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_response()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->response().data(), static_cast<int>(this->response().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "quintet.rpc.ClientRequestReply.response"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:quintet.rpc.ClientRequestReply)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:quintet.rpc.ClientRequestReply)
  return false;
#undef DO_
}

void ClientRequestReply::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:quintet.rpc.ClientRequestReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .quintet.rpc.Status status = 1;
  if (this->status() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->status(), output);
  }

  // string leaderHint = 2;
  if (this->leaderhint().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->leaderhint().data(), static_cast<int>(this->leaderhint().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "quintet.rpc.ClientRequestReply.leaderHint");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->leaderhint(), output);
  }

  // string response = 3;
  if (this->response().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->response().data(), static_cast<int>(this->response().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "quintet.rpc.ClientRequestReply.response");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->response(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:quintet.rpc.ClientRequestReply)
}

::google::protobuf::uint8* ClientRequestReply::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:quintet.rpc.ClientRequestReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .quintet.rpc.Status status = 1;
  if (this->status() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->status(), target);
  }

  // string leaderHint = 2;
  if (this->leaderhint().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->leaderhint().data(), static_cast<int>(this->leaderhint().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "quintet.rpc.ClientRequestReply.leaderHint");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->leaderhint(), target);
  }

  // string response = 3;
  if (this->response().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->response().data(), static_cast<int>(this->response().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "quintet.rpc.ClientRequestReply.response");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->response(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:quintet.rpc.ClientRequestReply)
  return target;
}

size_t ClientRequestReply::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:quintet.rpc.ClientRequestReply)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string leaderHint = 2;
  if (this->leaderhint().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->leaderhint());
  }

  // string response = 3;
  if (this->response().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->response());
  }

  // .quintet.rpc.Status status = 1;
  if (this->status() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->status());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ClientRequestReply::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:quintet.rpc.ClientRequestReply)
  GOOGLE_DCHECK_NE(&from, this);
  const ClientRequestReply* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ClientRequestReply>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:quintet.rpc.ClientRequestReply)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:quintet.rpc.ClientRequestReply)
    MergeFrom(*source);
  }
}

void ClientRequestReply::MergeFrom(const ClientRequestReply& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:quintet.rpc.ClientRequestReply)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.leaderhint().size() > 0) {

    leaderhint_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.leaderhint_);
  }
  if (from.response().size() > 0) {

    response_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.response_);
  }
  if (from.status() != 0) {
    set_status(from.status());
  }
}

void ClientRequestReply::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:quintet.rpc.ClientRequestReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ClientRequestReply::CopyFrom(const ClientRequestReply& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:quintet.rpc.ClientRequestReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ClientRequestReply::IsInitialized() const {
  return true;
}

void ClientRequestReply::Swap(ClientRequestReply* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ClientRequestReply::InternalSwap(ClientRequestReply* other) {
  using std::swap;
  leaderhint_.Swap(&other->leaderhint_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  response_.Swap(&other->response_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(status_, other->status_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ClientRequestReply::GetMetadata() const {
  protobuf_external_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_external_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace rpc
}  // namespace quintet
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::quintet::rpc::Empty* Arena::CreateMaybeMessage< ::quintet::rpc::Empty >(Arena* arena) {
  return Arena::CreateInternal< ::quintet::rpc::Empty >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::quintet::rpc::RegisterClientReply* Arena::CreateMaybeMessage< ::quintet::rpc::RegisterClientReply >(Arena* arena) {
  return Arena::CreateInternal< ::quintet::rpc::RegisterClientReply >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::quintet::rpc::ClientRequestMessage* Arena::CreateMaybeMessage< ::quintet::rpc::ClientRequestMessage >(Arena* arena) {
  return Arena::CreateInternal< ::quintet::rpc::ClientRequestMessage >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::quintet::rpc::ClientRequestReply* Arena::CreateMaybeMessage< ::quintet::rpc::ClientRequestReply >(Arena* arena) {
  return Arena::CreateInternal< ::quintet::rpc::ClientRequestReply >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
